meta {
  name: 07-Script
  seq: 8
}

docs {
  # 07 - Scripting in Bruno
  
  Welcome to Challenge 07!
  
  In this challenge, you'll learn how to use scripts in Bruno to dynamically set request data like method, headers, body â€” and log responses.
  
  ### ðŸŽ¯ What You'll Learn
  
  By completing this challenge, you'll:
  
  - âœ… Learn how to use the req and res objects
  - âœ… Write basic scripts using Bruno's Pre-Script and Post-Script tabs
  - âœ… Understand how scripting gives you full control over request execution
  
  ### Challenge Overview
  
  We'll set up the request dynamically using JavaScript in the `Pre-Script`, and then log the response using `Post-Script`.
  
  ### Instruction 
  
  #### Step 1: Create a Request
  
  1. Right click on `Script` folder and create request `echo-script`.
  
  2. Select `POST` as method and `{{base-url}}` as request URL.
  
  #### Step 2: Pre-Script - Set Up the Request
  
  1. Go to the request -> Script tab
  2. Paste the following code:
  
  ```javascript
  req.setBody({
    "title": "Bruno Starter Guide",
    "id": "07"
  });
  
  req.setHeaders("Content-Type: application/json");
  
  req.setMethod("POST");
  ```
  
  ##### âœ… This script:
  
  - Sets the request method to POST
  
  - Sets the content type header
  
  - Sets a JSON body dynamically
  
  #### Step 3: Post-Script â€” Log the Response
  
  1. Go to the Script tab â†’ Select Post-Script
  2. Paste the following code:
  ```js
  console.log(res.body);
  ```
  
  #### Step 4: Run and Observe
  - Execute the request
  - Open Console (via context menu(...) or press Ctrl + I)
  
  You should see the following logged:
  
  ```json
  {
    "title": "Bruno Starter Guide",
    "id": "07"
  }
  ```
  
  ### ðŸ“Œ Summary
  
  In this challenge, you learned how to:
  
  - Write Pre-Scripts to dynamically set method, headers, and body
  
  - Use Post-Scripts to log and debug responses
  
  - Leverage Bruno's scripting engine to make your API testing more flexible
}
