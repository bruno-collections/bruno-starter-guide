meta {
  name: Instruction
}

docs {
  # 🧑‍💻 Git Collaboration with Bruno
  
  Learn how to use Git with Bruno collections for version control and collaboration.
  
  ## Step 1: Create a New Collection
  
  1. Open Bruno
  2. Create a new collection named `git-collaboration`
  3. This will be your workspace for this challenge
  
  ## Step 2: Initialize Git (Choose your method)
  
  ### Option A: Using Bruno UI (Paid Plan)
  1. Click the Git icon near the Safe Mode toggle
  2. Select "Initialize Git Repository"
  3. Bruno initialize a Git repo inside the collection folder
  
  ### Option B: Using CLI (Free Plan Compatible)
  ```bash
  cd path/to/your/bruno-collection
  git init
  ```
  
  > [!NOTE]
  > Bruno collections are stored as plain files, so Git works naturally with them.
  
  ## Step 3: Commit Changes
  
  ### Using Bruno UI
  1. Make edits (e.g., add headers, body, etc.)
  2. Open the Git panel via the Git icon -> Git UI.
  3. Stage changes with the + icon
  4. Enter a commit message:
     ```
     Initial commit of Bruno Git Collaboration collection
     ```
  5. Click Commit
  
  ### Using CLI
  ```bash
  git add .
  git commit -m "Initial commit of Bruno Git Collaboration collection"
  ```
  
  ## Step 4: Create GitHub Repository
  
  1. Go to GitHub and log in
  2. Click New Repository
  3. Name it `bruno-git-collab` (or similar)
  4. Choose visibility: public or private
  5. Click Create Repository
  6. Copy the HTTPS URL:
     ```
     https://github.com/yourusername/bruno-git-collab.git
     ```
  
  ## Step 5: Add Remote and Push
  
  ### Using Bruno UI (Paid Plan)
  1. In Bruno's Git panel, go to Remotes > Add Remote
  2. Name: `origin`
  3. URL: Paste your GitHub URL
  4. Click Push to upload your collection
  
  ### Using CLI (Free Plan Compatible)
  ```bash
  git remote add origin https://github.com/yourusername/bruno-git-collab.git
  git branch -M main
  git push -u origin main
  ```
  
  ## Summary
  
  In this challenge, you successfully:
  
  - ✅ Created a new Bruno collection
  - ✅ Initialized Git using UI or CLI
  - ✅ Committed and pushed changes to GitHub
  - ✅ Learned how to collaborate using Bruno + Git
  
  Whether you're working solo or as part of a team, Bruno's Git integration supports flexible workflows to match your tools and license.
  
  Happy collaborating! 🚀
}
